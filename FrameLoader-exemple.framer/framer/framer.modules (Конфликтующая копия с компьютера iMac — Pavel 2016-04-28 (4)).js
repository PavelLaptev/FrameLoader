require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"Loader-CircleExpand":[function(require,module,exports){
exports.CircleExpand = function(opts) {
  var flag, from, i, j, randCircWrap, scriptEnable, to;
  if (opts == null) {
    opts = {};
  }
  flag = opts.hide != null ? opts.hide : opts.hide = true;
  scriptEnable = function() {
    var script;
    script = document.createElement("script");
    script.innerHTML = "var interval = setInterval(function() { if(document.readyState === 'complete') { clearInterval(interval); var wrap = document.getElementsByName('randCircWrap')[0]; wrap.setAttribute('style','display:none'); wrap.remove(); console.log('success!') } }, 100);";
    return document.head.appendChild(script);
  };
  randCircWrap = new Layer({
    width: Screen.width,
    height: Screen.height,
    backgroundColor: opts.back != null ? opts.back : opts.back = '#348aa7'
  });
  randCircWrap.parent = Framer.Device.screen;
  randCircWrap.bringToFront();
  randCircWrap.name = "randCircWrap";
  from = opts.from != null ? opts.from : opts.from = 0.4;
  to = opts.to != null ? opts.to : opts.to = 3;
  for (i = j = 3; j >= 0; i = --j) {
    Framer["circle" + i] = new Layer({
      width: 100 * i,
      height: 100 * i,
      borderRadius: 200,
      parent: randCircWrap
    });
    Framer["circle" + i].name = "circle" + i;
    Framer["circle" + i].center();
    Framer["animationA" + i] = new Animation({
      layer: Framer["circle" + (i + 1)],
      properties: {
        scale: 4
      },
      time: Utils.randomNumber(from, to),
      delay: 0.1,
      curve: "cubic-bezier(0.860, 0.000, 0.070, 1.000)"
    });
    Framer["animationB" + i] = Framer["animationA" + i].reverse();
    Framer["animationA" + i].on(Events.AnimationEnd, Framer["animationB" + i].start);
    Framer["animationB" + i].on(Events.AnimationEnd, Framer["animationA" + i].start);
  }
  Framer.animationA1.start();
  Framer.animationA2.start();
  Framer.animationA0.start();
  Framer.circle1.backgroundColor = opts.circle1 != null ? opts.circle1 : opts.circle1 = '#5dd39e';
  Framer.circle2.backgroundColor = opts.circle2 != null ? opts.circle2 : opts.circle2 = '#bce784';
  Framer.circle3.backgroundColor = opts.circle3 != null ? opts.circle3 : opts.circle3 = '#525174';
  if (flag === true) {
    return scriptEnable();
  }
};


},{}],"Loader-Dots":[function(require,module,exports){
exports.Dots = function(opts) {
  var dotsWrap, flag, from, i, j, randCircWrap, scriptEnable, to;
  if (opts == null) {
    opts = {};
  }
  flag = opts.hide != null ? opts.hide : opts.hide = true;
  scriptEnable = function() {
    var script;
    script = document.createElement("script");
    script.innerHTML = "var interval = setInterval(function() { if(document.readyState === 'complete') { clearInterval(interval); var wrap = document.getElementsByName('randCircWrap')[0]; wrap.setAttribute('style','display:none'); wrap.remove(); console.log('success!') } }, 100);";
    return document.head.appendChild(script);
  };
  randCircWrap = new Layer({
    width: Screen.width,
    height: Screen.height,
    backgroundColor: opts.back != null ? opts.back : opts.back = '#525174'
  });
  randCircWrap.parent = Framer.Device.screen;
  randCircWrap.bringToFront();
  randCircWrap.name = "randCircWrap";
  from = opts.from != null ? opts.from : opts.from = 0.4;
  to = opts.to != null ? opts.to : opts.to = 2;
  dotsWrap = new Layer({
    backgroundColor: 'transparent',
    width: 400,
    parent: randCircWrap
  });
  dotsWrap.center();
  for (i = j = 4; j >= 0; i = --j) {
    Framer["dot" + i] = new Layer({
      width: 45,
      height: 45,
      x: 40 + i * 70,
      borderRadius: 200,
      parent: dotsWrap
    });
    Framer["dot" + i].name = "dot" + i;
    Framer["dot" + i].centerY();
    Framer["animationA" + i] = new Animation({
      layer: Framer["dot" + i],
      properties: {
        scale: 4
      },
      time: Utils.randomNumber(from, to),
      delay: 0.1,
      curve: "cubic-bezier(0.860, 0.000, 0.070, 1.000)"
    });
    Framer["animationB" + i] = Framer["animationA" + i].reverse();
    Framer["animationA" + i].on(Events.AnimationEnd, Framer["animationB" + i].start);
    Framer["animationB" + i].on(Events.AnimationEnd, Framer["animationA" + i].start);
  }
  Framer.animationA1.start();
  Framer.animationA2.start();
  Framer.animationA3.start();
  Framer.animationA4.start();
  Framer.animationA0.start();
  Framer.dot0.backgroundColor = opts.dot1 != null ? opts.dot1 : opts.dot1 = '#bce784';
  Framer.dot1.backgroundColor = opts.dot2 != null ? opts.dot2 : opts.dot2 = '#5dd39e';
  Framer.dot2.backgroundColor = opts.dot3 != null ? opts.dot3 : opts.dot3 = '#348aa7';
  Framer.dot3.backgroundColor = opts.dot4 != null ? opts.dot4 : opts.dot4 = '#513b56';
  Framer.dot4.backgroundColor = opts.dot5 != null ? opts.dot5 : opts.dot5 = '#FF6363';
  if (flag === true) {
    return scriptEnable();
  }
};


},{}],"Loader-Image":[function(require,module,exports){
exports.Dots = function(opts) {
  var dotsWrap, flag, from, i, j, randCircWrap, scriptEnable, to;
  if (opts == null) {
    opts = {};
  }
  flag = opts.hide != null ? opts.hide : opts.hide = true;
  scriptEnable = function() {
    var script;
    script = document.createElement("script");
    script.innerHTML = "var interval = setInterval(function() { if(document.readyState === 'complete') { clearInterval(interval); var wrap = document.getElementsByName('randCircWrap')[0]; wrap.setAttribute('style','display:none'); wrap.remove(); console.log('success!') } }, 100);";
    return document.head.appendChild(script);
  };
  randCircWrap = new Layer({
    width: Screen.width,
    height: Screen.height,
    backgroundColor: opts.back != null ? opts.back : opts.back = '#525174'
  });
  randCircWrap.parent = Framer.Device.screen;
  randCircWrap.bringToFront();
  randCircWrap.name = "randCircWrap";
  from = opts.from != null ? opts.from : opts.from = 0.4;
  to = opts.to != null ? opts.to : opts.to = 2;
  dotsWrap = new Layer({
    backgroundColor: 'transparent',
    width: 400,
    parent: randCircWrap
  });
  dotsWrap.center();
  for (i = j = 4; j >= 0; i = --j) {
    Framer["dot" + i] = new Layer({
      width: 45,
      height: 45,
      x: 40 + i * 70,
      borderRadius: 200,
      parent: dotsWrap
    });
    Framer["dot" + i].name = "dot" + i;
    Framer["dot" + i].centerY();
    Framer["animationA" + i] = new Animation({
      layer: Framer["dot" + i],
      properties: {
        scale: 4
      },
      time: Utils.randomNumber(from, to),
      delay: 0.1,
      curve: "cubic-bezier(0.860, 0.000, 0.070, 1.000)"
    });
    Framer["animationB" + i] = Framer["animationA" + i].reverse();
    Framer["animationA" + i].on(Events.AnimationEnd, Framer["animationB" + i].start);
    Framer["animationB" + i].on(Events.AnimationEnd, Framer["animationA" + i].start);
  }
  Framer.animationA1.start();
  Framer.animationA2.start();
  Framer.animationA3.start();
  Framer.animationA4.start();
  Framer.animationA0.start();
  Framer.dot0.backgroundColor = opts.dot1 != null ? opts.dot1 : opts.dot1 = '#bce784';
  Framer.dot1.backgroundColor = opts.dot2 != null ? opts.dot2 : opts.dot2 = '#5dd39e';
  Framer.dot2.backgroundColor = opts.dot3 != null ? opts.dot3 : opts.dot3 = '#348aa7';
  Framer.dot3.backgroundColor = opts.dot4 != null ? opts.dot4 : opts.dot4 = '#513b56';
  Framer.dot4.backgroundColor = opts.dot5 != null ? opts.dot5 : opts.dot5 = '#FF6363';
  if (flag === true) {
    return scriptEnable();
  }
};


},{}]},{},[])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,
